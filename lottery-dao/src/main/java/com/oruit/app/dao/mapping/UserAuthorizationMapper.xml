<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oruit.app.dao.UserAuthorizationMapper" >
  <resultMap id="BaseResultMap" type="com.oruit.app.dao.model.UserAuthorization" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="union_id" property="unionId" jdbcType="VARCHAR" />
    <result column="auth_type" property="authType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, union_id, auth_type, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_authorization
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_authorization
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.oruit.app.dao.model.UserAuthorization" >
    insert into user_authorization (id, user_id, union_id, 
      auth_type, create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{unionId,jdbcType=VARCHAR}, 
      #{authType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.oruit.app.dao.model.UserAuthorization" >
    insert into user_authorization
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="unionId != null" >
        union_id,
      </if>
      <if test="authType != null" >
        auth_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="unionId != null" >
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="authType != null" >
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oruit.app.dao.model.UserAuthorization" >
    update user_authorization
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="unionId != null" >
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="authType != null" >
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oruit.app.dao.model.UserAuthorization" >
    update user_authorization
    set user_id = #{userId,jdbcType=INTEGER},
      union_id = #{unionId,jdbcType=VARCHAR},
      auth_type = #{authType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--查询用户是否已经授权-->
  <select id="queryUserid" resultType="java.lang.String" parameterType="java.lang.String" >
    select
      user_id
    from user_authorization
    where union_id = #{unionId,jdbcType=VARCHAR} AND auth_type = 1 LIMIT 1
  </select>
  <!--查询unionid-->
  <select id="queryUnionId" resultType="java.lang.String" parameterType="java.lang.String" >
    select
      union_id
    from user_authorization
    where user_id = #{userId}
    ORDER BY create_time DESC
    LIMIT 1
  </select>
</mapper>