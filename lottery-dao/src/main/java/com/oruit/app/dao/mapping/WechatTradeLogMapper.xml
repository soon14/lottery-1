<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oruit.app.dao.WechatTradeLogMapper" >
  <resultMap id="BaseResultMap" type="com.oruit.app.dao.model.WechatTradeLog" >
    <id column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="wechat_prepay_id" property="wechatPrepayId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.oruit.app.dao.model.WechatTradeLog" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, order_id, wechat_prepay_id, create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wechat_trade_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wechat_trade_log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.oruit.app.dao.model.WechatTradeLog" >
    insert into wechat_trade_log (log_id, order_id, wechat_prepay_id, 
      create_time, content)
    values (#{logId,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{wechatPrepayId,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oruit.app.dao.model.WechatTradeLog" >
    insert into wechat_trade_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="wechatPrepayId != null" >
        wechat_prepay_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="wechatPrepayId != null" >
        #{wechatPrepayId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oruit.app.dao.model.WechatTradeLog" >
    update wechat_trade_log
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="wechatPrepayId != null" >
        wechat_prepay_id = #{wechatPrepayId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.oruit.app.dao.model.WechatTradeLog" >
    update wechat_trade_log
    set order_id = #{orderId,jdbcType=VARCHAR},
      wechat_prepay_id = #{wechatPrepayId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oruit.app.dao.model.WechatTradeLog" >
    update wechat_trade_log
    set order_id = #{orderId,jdbcType=VARCHAR},
      wechat_prepay_id = #{wechatPrepayId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>